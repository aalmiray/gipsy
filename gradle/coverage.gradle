/*
 * Copyright 2010-2014 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

ext{
    cobSerFile = project.file('build/cobertura.ser')
    mainOriginal = "${sourceSets.main.output.classesDir}"
    mainCopy = "${mainOriginal}-copy"
    coberturaEnabled = project.hasProperty('withCobertura')
    doWithSourceDirs = { sourceSet, callback ->
        sourceSet.allSource.srcDirs.each { srcdir ->
            if(srcdir.exists() && !srcdir.name.endsWith('resources')) callback(srcdir)
        }
    }
}

configurations {
    cobertura
}

dependencies {
    cobertura 'net.sourceforge.cobertura:cobertura:1.9.4.1',
              'junit:junit:4.11'
}


test.doFirst  {
    if(coberturaEnabled) {
        ant {
            // delete data file for cobertura, otherwise coverage would be added
            delete(file: cobSerFile, failonerror:false)
            // delete copy of original classes
            delete(dir: mainCopy, failonerror:false)
            // import cobertura task, so it is available in the script
            taskdef(resource:'tasks.properties', classpath: configurations.cobertura.asPath)
            // create copy (backup) of original class files
            copy(todir: mainCopy) {
                fileset(dir: mainOriginal)
            }
            // instrument the relevant classes in-place
            'cobertura-instrument'(datafile: cobSerFile) {
                fileset(dir: mainOriginal, includes: '**/*.class')
            }
        }
    }
}

test {
    systemProperties = ['net.sourceforge.cobertura.datafile': cobSerFile]
    if(coberturaEnabled) classpath += configurations.cobertura
}

test.doLast {
    if(coberturaEnabled && new File(mainCopy).exists()) {
        // replace instrumented classes with backup copy again
        ant {
            delete(file: mainOriginal)
            move(file: mainCopy, tofile: mainOriginal)
        }
        // create cobertura reports
        ant.'cobertura-report'(destdir:"${reportsDir}/coverage",
             format: 'html', datafile: cobSerFile) {
            doWithSourceDirs(sourceSets.main) { srcdir ->
                fileset(dir: srcdir)
            }
        }
    }
}
